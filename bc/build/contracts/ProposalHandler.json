{
  "contractName": "ProposalHandler",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available(uint256)\":{\"details\":\"available() checks whether the given tokenId has already been sold or not\",\"params\":{\"_tokenId\":\"- the tokenId to check for\"}},\"getPrice()\":{\"details\":\"getPrice() returns the price of one NFT\"},\"purchase(uint256)\":{\"details\":\"purchase() accepts ETH and marks the owner of the given tokenId as the caller address\",\"params\":{\"_tokenId\":\"- the fake NFT token Id to purchase\"}}},\"stateVariables\":{\"nftPrice\":{\"details\":\"Set the purchase price for each Fake NFT\"},\"tokens\":{\"details\":\"Maintain a mapping of Fake TokenID to Owner addresses\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ProposalHandler.sol\":\"ProposalHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ProposalHandler.sol\":{\"keccak256\":\"0xf5596be9a3da6a970f876e580650c62815ae4f8c425cd1753fd5754c37b7fba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://739d496446a65259f488d93e823f2674b95a12770fb8e696174395c0e1e8ff17\",\"dweb:/ipfs/QmWe4qhtQMqbt83tC9JHDBMpYKAuugcuBAVx1F2SXSgmHZ\"]}},\"version\":1}",
  "bytecode": "0x6080604052655af3107a400060015534801561001a57600080fd5b5061042b8061002a6000396000f3fe60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461008157806398d5fdca146100be578063efef39a1146100e9575b600080fd5b34801561005057600080fd5b5061006b6004803603810190610066919061028f565b610105565b60405161007891906102fd565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a3919061028f565b610138565b6040516100b59190610333565b60405180910390f35b3480156100ca57600080fd5b506100d36101b2565b6040516100e0919061035d565b60405180910390f35b61010360048036038101906100fe919061028f565b6101bc565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101a857600190506101ad565b600090505b919050565b6000600154905090565b6001543414610200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f7906103d5565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b6000819050919050565b61026c81610259565b811461027757600080fd5b50565b60008135905061028981610263565b92915050565b6000602082840312156102a5576102a4610254565b5b60006102b38482850161027a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102e7826102bc565b9050919050565b6102f7816102dc565b82525050565b600060208201905061031260008301846102ee565b92915050565b60008115159050919050565b61032d81610318565b82525050565b60006020820190506103486000830184610324565b92915050565b61035781610259565b82525050565b6000602082019050610372600083018461034e565b92915050565b600082825260208201905092915050565b7f54686973204e465420636f73747320302e303030312065746865720000000000600082015250565b60006103bf601b83610378565b91506103ca82610389565b602082019050919050565b600060208201905081810360008301526103ee816103b2565b905091905056fea26469706673582212203353980c2e0b961ffed8465786e25a16ea144d4db638e6b13baad4fa7298d32964736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461008157806398d5fdca146100be578063efef39a1146100e9575b600080fd5b34801561005057600080fd5b5061006b6004803603810190610066919061028f565b610105565b60405161007891906102fd565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a3919061028f565b610138565b6040516100b59190610333565b60405180910390f35b3480156100ca57600080fd5b506100d36101b2565b6040516100e0919061035d565b60405180910390f35b61010360048036038101906100fe919061028f565b6101bc565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101a857600190506101ad565b600090505b919050565b6000600154905090565b6001543414610200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f7906103d5565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b6000819050919050565b61026c81610259565b811461027757600080fd5b50565b60008135905061028981610263565b92915050565b6000602082840312156102a5576102a4610254565b5b60006102b38482850161027a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102e7826102bc565b9050919050565b6102f7816102dc565b82525050565b600060208201905061031260008301846102ee565b92915050565b60008115159050919050565b61032d81610318565b82525050565b60006020820190506103486000830184610324565b92915050565b61035781610259565b82525050565b6000602082019050610372600083018461034e565b92915050565b600082825260208201905092915050565b7f54686973204e465420636f73747320302e303030312065746865720000000000600082015250565b60006103bf601b83610378565b91506103ca82610389565b602082019050919050565b600060208201905081810360008301526103ee816103b2565b905091905056fea26469706673582212203353980c2e0b961ffed8465786e25a16ea144d4db638e6b13baad4fa7298d32964736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3542:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:17",
                "type": ""
              }
            ],
            "src": "7:75:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:17",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:17"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:17",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:17"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:17",
                "type": ""
              }
            ],
            "src": "334:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:17",
                "type": ""
              }
            ],
            "src": "417:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:17",
                "type": ""
              }
            ],
            "src": "545:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:17",
                "type": ""
              }
            ],
            "src": "690:329:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:17",
                "type": ""
              }
            ],
            "src": "1025:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:17",
                "type": ""
              }
            ],
            "src": "1157:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:17",
                "type": ""
              }
            ],
            "src": "1259:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:17",
                "type": ""
              }
            ],
            "src": "1383:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1653:48:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1663:32:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1688:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1681:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1674:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1674:21:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1663:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1635:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1645:7:17",
                "type": ""
              }
            ],
            "src": "1611:90:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1766:50:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1783:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1803:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1788:14:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:21:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1776:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1776:34:17"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1754:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1761:3:17",
                "type": ""
              }
            ],
            "src": "1707:109:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1914:118:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1924:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1936:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1947:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1932:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1924:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1998:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1960:37:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1960:65:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1886:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1898:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1909:4:17",
                "type": ""
              }
            ],
            "src": "1822:210:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2103:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2120:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2143:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2125:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2113:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2113:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2113:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2091:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2098:3:17",
                "type": ""
              }
            ],
            "src": "2038:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2282:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2293:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2278:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2270:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2350:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2363:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2306:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2306:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2232:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2244:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2255:4:17",
                "type": ""
              }
            ],
            "src": "2162:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2486:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2503:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2508:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2496:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2524:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2543:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2548:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2524:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2458:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2463:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2474:11:17",
                "type": ""
              }
            ],
            "src": "2390:169:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2671:71:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2693:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2701:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2689:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2689:14:17"
                      },
                      {
                        "hexValue": "54686973204e465420636f73747320302e30303031206574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2705:29:17",
                        "type": "",
                        "value": "This NFT costs 0.0001 ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2682:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:53:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2682:53:17"
                }
              ]
            },
            "name": "store_literal_in_memory_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2663:6:17",
                "type": ""
              }
            ],
            "src": "2565:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2894:220:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2904:74:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2970:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2975:2:17",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2911:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2911:67:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2904:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3076:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac",
                      "nodeType": "YulIdentifier",
                      "src": "2987:88:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:93:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2987:93:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3089:19:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3100:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3105:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3096:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3089:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2882:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2890:3:17",
                "type": ""
              }
            ],
            "src": "2748:366:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3291:248:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3301:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3313:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3324:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3309:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3301:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3348:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3359:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3344:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3344:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3367:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3373:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3363:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3363:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3337:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3337:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3337:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:139:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3527:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3401:124:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:131:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3393:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3271:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3286:4:17",
                "type": ""
              }
            ],
            "src": "3120:419:17"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT costs 0.0001 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:1189:16:-:0;;;282:12;263:31;;60:1189;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:1189:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;160:41;;;;;;;;;;;;;;;;;;;;;;:::o;933:313::-;993:4;1174:1;1146:30;;:6;:16;1153:8;1146:16;;;;;;;;;;;;;;;;;;;;;:30;;;1142:74;;1200:4;1193:11;;;;1142:74;1233:5;1226:12;;933:313;;;;:::o;699:86::-;742:7;769:8;;762:15;;699:86;:::o;464:173::-;549:8;;536:9;:21;528:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;619:10;600:6;:16;607:8;600:16;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;464:173;:::o;88:117:17:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:169::-;2474:11;2508:6;2503:3;2496:19;2548:4;2543:3;2539:14;2524:29;;2390:169;;;;:::o;2565:177::-;2705:29;2701:1;2693:6;2689:14;2682:53;2565:177;:::o;2748:366::-;2890:3;2911:67;2975:2;2970:3;2911:67;:::i;:::-;2904:74;;2987:93;3076:3;2987:93;:::i;:::-;3105:2;3100:3;3096:12;3089:19;;2748:366;;;:::o;3120:419::-;3286:4;3324:2;3313:9;3309:18;3301:26;;3373:9;3367:4;3363:20;3359:1;3348:9;3344:17;3337:47;3401:131;3527:4;3401:131;:::i;:::-;3393:139;;3120:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract ProposalHandler {\r\n    /// @dev Maintain a mapping of Fake TokenID to Owner addresses\r\n    mapping(uint256 => address) public tokens;\r\n    /// @dev Set the purchase price for each Fake NFT\r\n    uint256 nftPrice = 0.0001 ether;\r\n\r\n    /// @dev purchase() accepts ETH and marks the owner of the given tokenId as the caller address\r\n    /// @param _tokenId - the fake NFT token Id to purchase\r\n    function purchase(uint256 _tokenId) external payable {\r\n        require(msg.value == nftPrice, \"This NFT costs 0.0001 ether\");\r\n        tokens[_tokenId] = msg.sender;\r\n    }\r\n\r\n    /// @dev getPrice() returns the price of one NFT\r\n    function getPrice() external view returns (uint256) {\r\n        return nftPrice;\r\n    }\r\n\r\n    /// @dev available() checks whether the given tokenId has already been sold or not\r\n    /// @param _tokenId - the tokenId to check for\r\n    function available(uint256 _tokenId) external view returns (bool) {\r\n        // address(0) = 0x0000000000000000000000000000000000000000\r\n        // This is the default value for addresses in Solidity\r\n        if (tokens[_tokenId] == address(0)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Sudeep\\Desktop\\DAO\\bc\\contracts\\ProposalHandler.sol",
  "ast": {
    "absolutePath": "project:/contracts/ProposalHandler.sol",
    "exportedSymbols": {
      "ProposalHandler": [
        2794
      ]
    },
    "id": 2795,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2730,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ProposalHandler",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2794,
        "linearizedBaseContracts": [
          2794
        ],
        "name": "ProposalHandler",
        "nameLocation": "69:15:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2731,
              "nodeType": "StructuredDocumentation",
              "src": "92:62:16",
              "text": "@dev Maintain a mapping of Fake TokenID to Owner addresses"
            },
            "functionSelector": "4f64b2be",
            "id": 2735,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "195:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 2794,
            "src": "160:41:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2734,
              "keyType": {
                "id": 2732,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "168:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "160:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2733,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2736,
              "nodeType": "StructuredDocumentation",
              "src": "208:49:16",
              "text": "@dev Set the purchase price for each Fake NFT"
            },
            "id": 2739,
            "mutability": "mutable",
            "name": "nftPrice",
            "nameLocation": "271:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 2794,
            "src": "263:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2737,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e30303031",
              "id": 2738,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "282:12:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              },
              "value": "0.0001"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2760,
              "nodeType": "Block",
              "src": "517:120:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2746,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "536:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "540:5:16",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "536:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2748,
                          "name": "nftPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2739,
                          "src": "549:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "536:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e465420636f73747320302e30303031206574686572",
                        "id": 2750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "559:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac",
                          "typeString": "literal_string \"This NFT costs 0.0001 ether\""
                        },
                        "value": "This NFT costs 0.0001 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dd0fdc052a8aeb8823384c6fc230d52d9d25a8f81ce6c1342c3f054f0a9f2ac",
                          "typeString": "literal_string \"This NFT costs 0.0001 ether\""
                        }
                      ],
                      "id": 2745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "528:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2752,
                  "nodeType": "ExpressionStatement",
                  "src": "528:61:16"
                },
                {
                  "expression": {
                    "id": 2758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2753,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "600:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2755,
                      "indexExpression": {
                        "id": 2754,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2742,
                        "src": "607:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "600:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2756,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "619:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "623:6:16",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "619:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "600:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2759,
                  "nodeType": "ExpressionStatement",
                  "src": "600:29:16"
                }
              ]
            },
            "documentation": {
              "id": 2740,
              "nodeType": "StructuredDocumentation",
              "src": "303:155:16",
              "text": "@dev purchase() accepts ETH and marks the owner of the given tokenId as the caller address\n @param _tokenId - the fake NFT token Id to purchase"
            },
            "functionSelector": "efef39a1",
            "id": 2761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nameLocation": "473:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2742,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "490:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2761,
                  "src": "482:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:18:16"
            },
            "returnParameters": {
              "id": 2744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "517:0:16"
            },
            "scope": 2794,
            "src": "464:173:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2769,
              "nodeType": "Block",
              "src": "751:34:16",
              "statements": [
                {
                  "expression": {
                    "id": 2767,
                    "name": "nftPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2739,
                    "src": "769:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2766,
                  "id": 2768,
                  "nodeType": "Return",
                  "src": "762:15:16"
                }
              ]
            },
            "documentation": {
              "id": 2762,
              "nodeType": "StructuredDocumentation",
              "src": "645:48:16",
              "text": "@dev getPrice() returns the price of one NFT"
            },
            "functionSelector": "98d5fdca",
            "id": 2770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "708:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:16"
            },
            "returnParameters": {
              "id": 2766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2770,
                  "src": "742:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:9:16"
            },
            "scope": 2794,
            "src": "699:86:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2792,
              "nodeType": "Block",
              "src": "999:247:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2778,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "1146:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2780,
                      "indexExpression": {
                        "id": 2779,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2773,
                        "src": "1153:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1146:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1174:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1166:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2781,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1166:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1166:10:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1146:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2789,
                  "nodeType": "IfStatement",
                  "src": "1142:74:16",
                  "trueBody": {
                    "id": 2788,
                    "nodeType": "Block",
                    "src": "1178:38:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1200:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2777,
                        "id": 2787,
                        "nodeType": "Return",
                        "src": "1193:11:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1233:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 2777,
                  "id": 2791,
                  "nodeType": "Return",
                  "src": "1226:12:16"
                }
              ]
            },
            "documentation": {
              "id": 2771,
              "nodeType": "StructuredDocumentation",
              "src": "793:134:16",
              "text": "@dev available() checks whether the given tokenId has already been sold or not\n @param _tokenId - the tokenId to check for"
            },
            "functionSelector": "96e494e8",
            "id": 2793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "942:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2773,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "960:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "952:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:18:16"
            },
            "returnParameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "993:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:6:16"
            },
            "scope": 2794,
            "src": "933:313:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2795,
        "src": "60:1189:16",
        "usedErrors": []
      }
    ],
    "src": "33:1218:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1Cc901fc7C625e44c10e7c902Ab9Ef8011f9ac9f",
      "transactionHash": "0xa3fbb20c77cba348975057a0b4d5b42bbab558c70f766f1aa1a85c2aa83870d2"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-18T07:28:46.524Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "available(uint256)": {
        "details": "available() checks whether the given tokenId has already been sold or not",
        "params": {
          "_tokenId": "- the tokenId to check for"
        }
      },
      "getPrice()": {
        "details": "getPrice() returns the price of one NFT"
      },
      "purchase(uint256)": {
        "details": "purchase() accepts ETH and marks the owner of the given tokenId as the caller address",
        "params": {
          "_tokenId": "- the fake NFT token Id to purchase"
        }
      }
    },
    "stateVariables": {
      "nftPrice": {
        "details": "Set the purchase price for each Fake NFT"
      },
      "tokens": {
        "details": "Maintain a mapping of Fake TokenID to Owner addresses"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}